package com.jancar.settings.view.fragment;import android.annotation.SuppressLint;import android.app.Fragment;import android.content.ComponentName;import android.content.Intent;import android.content.pm.PackageInfo;import android.content.pm.PackageManager;import android.content.pm.ResolveInfo;import android.graphics.drawable.Drawable;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.os.Parcelable;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.ImageView;import android.widget.ListView;import android.widget.RelativeLayout;import android.widget.ScrollView;import android.widget.SeekBar;import android.widget.Switch;import android.widget.TextView;import android.widget.Toast;import com.jancar.settings.R;import com.jancar.settings.adapter.NavigationListAdapter;import com.jancar.settings.contract.NavigationEntity;import com.jancar.settings.lib.SettingManager;import com.jancar.settings.listener.Contract.NavigationContractImpl;import com.jancar.settings.listener.IPresenter;import com.jancar.settings.manager.BaseFragments;import com.jancar.settings.presenter.NavigationPresenter;import com.jancar.settings.service.MyService;import com.jancar.settings.service.SettingsUIService;import com.jancar.settings.view.activity.MainActivity;import com.jancar.settings.widget.SwitchButton;import java.util.ArrayList;import java.util.HashSet;import java.util.List;import java.util.Set;import static com.jancar.common.LogUtils.LOGD;import static com.jancar.settings.suspension.utils.Contacts.CLASS_NAME;import static com.jancar.settings.suspension.utils.Contacts.PACKAGE_NAME;/** * Created by ouyan on 2018/9/10. */public class NavigationFragment extends BaseFragments<NavigationPresenter> implements NavigationContractImpl.View, View.OnClickListener, SeekBar.OnSeekBarChangeListener, AdapterView.OnItemClickListener {    private View view;    private RelativeLayout softwareNavigationRlayout;    private ScrollView rlayoutScrollview;    private RelativeLayout pMixingNavigationRlayout;    private RelativeLayout soundMixingRlayout;    private SwitchButton mixingSwitch;    private TextView soundMixingLineTxt;    private TextView dsoundMixingValueTxt;    private SeekBar soundMixingValueSeekbar;    private ImageView pMixingNavigationArrowImg;    private ListView navigationList;    private List<NavigationEntity> navigationEntityList;    private NavigationListAdapter listAdapter;    private SettingManager settingManager;    List<String> keyWords;    Set<NavigationEntity> NavigationSoftware;    // List<AppInfo> NavigationSoftwares;    @SuppressLint("HandlerLeak")    Handler mHadler = new Handler() {        @Override        public void handleMessage(Message msg) {            ((MainActivity) getContext()).mHadler = null;            if (rlayoutScrollview != null) {                navigationList.setVisibility(View.GONE);                rlayoutScrollview.setVisibility(View.VISIBLE);            }            super.handleMessage(msg);        }    };    @SuppressLint("HandlerLeak")    Handler getmHadler = new Handler() {        @Override        public void handleMessage(Message msg) {            super.handleMessage(msg);            Bundle bundle = msg.getData();            navigationEntityList = bundle.getParcelableArrayList("navigation");            if (navigationEntityList != null) {                String s = settingManager.getNaviInfo().trim();                Log.w("getNaviInfo", "getNaviInfo___" + s);                for (NavigationEntity mNavigationEntity : navigationEntityList) {                    if (s.equals("")) {                        if (mNavigationEntity.getName().equals("高德地图")) {                            mNavigationEntity.setUp(true);                        } else {                            mNavigationEntity.setUp(false);                        }                        //  Toast.makeText(getContext(), s, Toast.LENGTH_SHORT).show();MSG_CMD_SOURCE                    } else {                        if (s.trim().equals(mNavigationEntity.getPackageName() + "|" + mNavigationEntity.getClassName())) {                            mNavigationEntity.setUp(true);                        } else {                            mNavigationEntity.setUp(false);                        }                    }                    Log.w("w", s);                    listAdapter = new NavigationListAdapter(getContext(), navigationEntityList);                    navigationList.setAdapter(listAdapter);                }            }        }    };    @Override    public void initView(@Nullable Bundle savedInstanceState) {        if (view != null) {            rlayoutScrollview = (ScrollView) view.findViewById(R.id.rlayout_scrollview);            softwareNavigationRlayout = (RelativeLayout) view.findViewById(R.id.rlayout_software_navigation);            pMixingNavigationRlayout = (RelativeLayout) view.findViewById(R.id.rlayout_p_mixing_navigation);            soundMixingRlayout = (RelativeLayout) view.findViewById(R.id.rlayout_sound_mixing);            mixingSwitch = (SwitchButton) view.findViewById(R.id.switch_mixing);            soundMixingLineTxt = (TextView) view.findViewById(R.id.txt_sound_mixing_line);            dsoundMixingValueTxt = (TextView) view.findViewById(R.id.txt_dsound_mixing_value);            soundMixingValueSeekbar = (SeekBar) view.findViewById(R.id.seekbar_sound_mixing_value);            pMixingNavigationArrowImg = (ImageView) view.findViewById(R.id.img_p_mixing_navigation_arrow);            navigationList = (ListView) view.findViewById(R.id.list_navigation);        }    }    @Override    public View initView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        view = inflater.inflate(R.layout.fragment_navigation, null);        initView(savedInstanceState);        initData(savedInstanceState);        return view;    }    @Override    public int initResid() {        return 0;    }    @Override    public IPresenter initPresenter() {        return new NavigationPresenter(this);    }    @Override    public void initData(@Nullable Bundle savedInstanceState) {        settingManager = SettingManager.getSettingManager(this.getContext());        softwareNavigationRlayout.setOnClickListener(this);        pMixingNavigationRlayout.setOnClickListener(this);        mixingSwitch.setThumbDrawableRes(R.drawable.switch_custom_thumb_selector);        mixingSwitch.setBackDrawableRes(R.drawable.switch_custom_track_selector);        mixingSwitch.setBackRadius(60);        mixingSwitch.setOnClickListener(this);        //  mixingSwitch.        soundMixingValueSeekbar.setMax(99);        soundMixingValueSeekbar.setProgress(settingManager.getNaviMixValue());        dsoundMixingValueTxt.setText(settingManager.getNaviMixValue() + "%");        soundMixingValueSeekbar.setOnSeekBarChangeListener(this);        // navigationEntityList = mPresenter.getListData();        navigationList.setOnItemClickListener(this);        mixingSwitch.setCheckedImmediately(settingManager.getNaviMixState());        navigationEntityList = new ArrayList<>();        setNavig();    }    public void setNavig() {        Thread thread = new Thread() {            @Override            public void run() {                keyWords = mPresenter.readXml("/system/etc/audioGisWhitelist.xml");                // List<NavigationEntity> mlistAppInfo = new ArrayList<>();                Set<NavigationEntity> NavigationSoftware = new HashSet<>();                List<NavigationEntity> navigationEntityList = new ArrayList<>();                List<NavigationEntity> mlistAppInfo = queryAppInfo();                for (NavigationEntity mAppInfo : mlistAppInfo) {                    for (String ms : keyWords) {                        if (mAppInfo.getPackageName().contains(ms)) {                            System.out.println("包含");                            NavigationSoftware.add(mAppInfo);                        }                    }                }                navigationEntityList.addAll(NavigationSoftware);                Message mMessage = new Message();                Bundle mBundle = new Bundle();                mBundle.putParcelableArrayList("navigation", (ArrayList<? extends Parcelable>) navigationEntityList);                mMessage.setData(mBundle);                getmHadler.sendMessage(mMessage);            }        };        thread.setName("OuYang");        thread.start();    }    @SuppressLint("LongLogTag")    public List<NavigationEntity> queryAppInfo() {        List<NavigationEntity> mlistAppInfo = new ArrayList<>();        PackageManager pm = getContext().getPackageManager();        Intent intent = new Intent(Intent.ACTION_MAIN, null);        if (mlistAppInfo != null) {            mlistAppInfo.clear();            Intent localIntent = new Intent("android.intent.action.MAIN", null);            localIntent.addCategory("android.intent.category.LAUNCHER");            for (ResolveInfo reInfo : getContext().getPackageManager().queryIntentActivities(intent, 0)) {                String activityName = reInfo.activityInfo.name; // 获得该应用程序的启动Activity的name                String pkgName = reInfo.activityInfo.packageName; // 获得应用程序的包名                String appLabel = (String) reInfo.loadLabel(pm); // 获得应用程序的Label                Drawable icon = reInfo.loadIcon(pm); // 获得应用程序图标                // 为应用程序的启动Activity 准备Intent                Intent launchIntent = new Intent();                launchIntent.setComponent(new ComponentName(pkgName,                        activityName));                // 创建一个AppInfo对象，并赋值                NavigationEntity appInfo = new NavigationEntity();                appInfo.setName(appLabel);                appInfo.setClassName(activityName);                appInfo.setPackageName(pkgName);                appInfo.setImg(icon);                Log.w("MainActivity_____PackageName", appInfo.getPackageName());                Log.w("MainActivity_____ClassName", appInfo.getClassName());                mlistAppInfo.add(appInfo); // 添加至列表中            }        }        return mlistAppInfo;    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.rlayout_software_navigation:                navigationList.setVisibility(View.VISIBLE);                rlayoutScrollview.setVisibility(View.GONE);                ((MainActivity) getContext()).mHadler = mHadler;                break;            case R.id.rlayout_p_mixing_navigation:                setVisibility();                break;            case R.id.switch_mixing:              /*  settingManager.setIsNeedKeySound();                setDrivingStopVedio*/                //   mixingSwitch.setCheckedImmediately(settingManager.getNaviMixState());              /*  settingManager.getNaviMixState();                settingManager.setNaviMixValue();*/                settingManager.setNaviMixState(!settingManager.getNaviMixState());                break;        }    }    @Override    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {        int progres = progress + 1;        dsoundMixingValueTxt.setText(progres + "%");        settingManager.setNaviMixValue(progres, false);    }    @Override    public void onStartTrackingTouch(SeekBar seekBar) {        if (!settingManager.getNaviMixState()) {            mixingSwitch.setCheckedImmediately(true);            settingManager.setNaviMixState(true);        }    }    @Override    public void onStopTrackingTouch(SeekBar seekBar) {        int progres = seekBar.getProgress() + 1;        settingManager.setNaviMixValue(progres, true);    }    public void setVisibility() {        if (soundMixingRlayout.getVisibility() == View.GONE) {            soundMixingRlayout.setVisibility(View.VISIBLE);            soundMixingLineTxt.setVisibility(View.VISIBLE);            pMixingNavigationArrowImg.setImageResource(R.drawable.balance_btn_bottom_state);        } else {            pMixingNavigationArrowImg.setImageResource(R.drawable.balance_btn_right_state);            soundMixingLineTxt.setVisibility(View.GONE);            soundMixingRlayout.setVisibility(View.GONE);        }    }    @Override    public void setData(@Nullable Object data) {    }    @Override    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {        if (navigationEntityList.get(position).isUp()) {            ((MainActivity) getContext()).mHadler = null;            if (rlayoutScrollview != null) {                navigationList.setVisibility(View.GONE);                rlayoutScrollview.setVisibility(View.VISIBLE);            }        } else {            for (NavigationEntity mNavigationEntity : navigationEntityList) {                mNavigationEntity.setUp(false);            }            settingManager.setNaviInfo(navigationEntityList.get(position).getPackageName() + "|" + navigationEntityList.get(position).getClassName());            Intent intent = new Intent(getContext(), MyService.class);            Log.w("getNaviInfo", "getNaviInfo+++" + settingManager.getNaviInfo());            Log.w("getNaviInfo", "getNaviInfo___+++" + navigationEntityList.get(position).getPackageName() + "|" + navigationEntityList.get(position).getClassName());            //  intent.setClassName(packageName,c);            intent.putExtra(PACKAGE_NAME, navigationEntityList.get(position).getPackageName());            intent.putExtra(CLASS_NAME, navigationEntityList.get(position).getClassName());            getContext().startService(intent);            navigationEntityList.get(position).setUp(true);            //  listAdapter.setID(navigationEntityList.get(position).getName());            listAdapter.notifyDataSetInvalidated();        }    }}